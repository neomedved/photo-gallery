{"version":3,"sources":["js/constants/config.js","js/components/Header.js","js/components/Card.js","js/components/Container.js","js/components/Page.js","js/api/Api.js","js/components/Error.js","js/App.js","index.js"],"names":["PUBLIC_URL","process","withRouter","props","user","userId","album","albumId","className","to","Fragment","card","image","caption","id","location","pathname","replace","src","alt","title","subtitle","data","map","element","key","api","baseUrl","this","url","fetch","method","then","res","ok","json","Promise","reject","Error","template","state","isLoaded","error","header","match","params","promises","push","Page","renderHeader","renderPhotos","renderAlbums","renderUsers","all","result","catch","err","finally","setState","updateState","prevProps","prevUserId","prevAlbumId","getAlbum","getUser","name","getUsers","username","getAlbums","albums","a","getPhotos","photos","length","thumbnailUrl","React","Component","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bcf6b1d.chunk.js","sourcesContent":["const { NODE_ENV } = process.env;\nexport const API_URL = 'https://jsonplaceholder.typicode.com', PUBLIC_URL = NODE_ENV === 'production' ? process.env.PUBLIC_URL : '';\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { PUBLIC_URL } from '../constants/config';\n\nexport default withRouter(\n  function Header(props) {\n    const { user, userId, album, albumId } = props;\n    return <header className='header'>\n      <Link to={`${PUBLIC_URL}/`} className='header__link'>Галерея</Link>\n\n      {\n        userId ?\n          <React.Fragment>\n            <span className='header__slash'> / </span>\n            <Link to={`${PUBLIC_URL}/${userId}`} className='header__link'>{`${user}`}</Link>\n          </React.Fragment> :\n          null\n      }\n\n      {\n        albumId ?\n          <React.Fragment>\n            <span className='header__slash'> / </span>\n            <Link to={`${PUBLIC_URL}/${userId}/${albumId}`} className='header__link'>{`${album}`}</Link>\n          </React.Fragment> :\n          null\n      }\n    </header>;\n  }\n);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nexport default withRouter(\n  function Card(props){\n    const { image, caption, id } = props.card;\n    return <Link to={`${props.location.pathname.replace(/\\/$/, '')}/${id}`} className='cards__card'>\n      {image ? <img src={image.src} alt={image.alt} className='cards__image'/> : null}\n      {\n        caption ?\n          <React.Fragment>\n            <h3 className='cards__title'>{caption.title}</h3>\n            <h4 className='cards__subtitle'>{caption.subtitle}</h4>\n          </React.Fragment> :\n          null\n      }\n    </Link>\n  }\n);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Card from './Card';\n\nexport default withRouter(\n  function Container (props) {\n    return <main className='cards'>\n      {\n        props.data.map((element) => {\n          return <Card key={`${props.location.pathname.replace(/\\/$/, '')}/${element.id}`} card={element} />;\n        })\n      }\n    </main>;\n}\n);\n","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport Container from './Container';\nimport Api from '../api/Api';\nimport { API_URL, PUBLIC_URL } from '../constants/config';\n\nconst api = new Api(API_URL);\n\nexport default withRouter(\n  class Page extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        isLoaded: false,\n        error: null,\n        header: {},\n        data: [],\n      }\n    }\n\n\n    static async renderHeader (userId, albumId) {\n      const album = albumId ? (await api.getAlbum(albumId)).title : null;\n      const user = userId ? (await api.getUser(userId)).name : null;\n      return {\n        user,\n        album,\n      }\n    }\n    \n\n    static async renderUsers() {\n      const data = await api.getUsers();\n      return data.map((element) => {\n        return {\n          id: element.id,\n          caption: {\n            title: element.name,\n            subtitle: `@${element.username}`,\n          },\n        };\n      });   \n    }\n\n\n    static async renderAlbums(userId){\n      const albums = await api.getAlbums(userId);\n      return await Promise.all(albums.map(async (element) => {\n        const photos = await api.getPhotos(element.id);\n        return {\n          id: element.id,\n          caption: {\n            title: element.title,\n            subtitle: `Фотографий: ${photos.length}`,\n          },\n          image: {\n            src: photos[0].thumbnailUrl,\n            alt: element.title,\n          }\n        }\n      }));\n    }\n\n\n    static async renderPhotos(albumId) {\n      const data = await api.getPhotos(albumId)  \n      return data.map((element) => {\n        return {\n          id: element.id,\n          image: {\n            src: element.thumbnailUrl,\n            alt: `${element.title}`,\n          }\n        };\n      });\n    }\n\n\n    updateState() {\n      const { userId, albumId } = this.props.match.params;\n      const state = {\n        header: {\n          userId,\n          albumId,\n        },\n        data: [],\n      };\n      const promises = [];\n\n      promises.push(Page.renderHeader(userId, albumId, state));\n\n      if(albumId) {\n        promises.push(Page.renderPhotos(albumId,state));\n      } else if (userId) {\n        promises.push(Page.renderAlbums(userId));\n      } else {\n        promises.push(Page.renderUsers());\n      }\n\n      Promise.all(promises)\n        .then((result) => {\n          state.header = {\n            ...state.header,\n            ...result[0],\n          };\n          state.data = result[1];\n          state.isLoaded = true;\n        })\n        .catch((err) =>  state.error = err)\n        .finally(() => this.setState(state));\n    }\n\n\n    componentDidMount() {\n      this.updateState();\n    }\n\n    componentDidUpdate(prevProps) {\n      const { userId: prevUserId, albumId: prevAlbumId } = prevProps.match.params;\n      const { userId, albumId } = this.props.match.params;\n      if(userId !== prevUserId || albumId !== prevAlbumId) {\n        this.updateState();\n      }\n    }\n\n\n    render() {\n      if (this.state.error) {\n        return <Redirect to={`${PUBLIC_URL}/error`} />\n      } else if (this.state.isLoaded) {\n        return <React.Fragment>\n          <Header {...this.state.header}/>\n          <Container data={this.state.data} />\n        </React.Fragment>;\n      } else {\n        return null;\n      }\n    }\n  }\n);\n","export default class Api {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async template(url) {\n    return fetch(`${this.baseUrl}/${url}`, { method: 'GET' })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error('Loading Error'));\n      });\n  }\n\n  async getUsers() {\n    return this.template('users');\n  }\n\n  async getUser(userId) {\n    return this.template(`users/${userId}`);\n  }\n\n  async getAlbums(userId) {\n    return this.template(`users/${userId}/albums`);\n  }\n\n  async getAlbum(albumId) {\n    return this.template(`albums/${albumId}`);\n  }\n\n  async getPhotos(albumId) {\n    return this.template(`albums/${albumId}/photos`);\n  }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PUBLIC_URL } from '../constants/config';\n\nexport default function () {\n  return  <main className='error'>\n    <h1 className='error__title'>Ошибка</h1>\n    <h2 className='error__subtitle'>Не удалось получить данные :(</h2>\n      <Link to={`${PUBLIC_URL}/`} className='error__link'>Вернуться на главную</Link>\n  </main>;\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Page from './components/Page';\nimport Error from './components/Error';\nimport { PUBLIC_URL } from './constants/config';\n\nexport default function App(props) {\n  return <Router>\n    <Switch>\n      <Route path={`${PUBLIC_URL}/error`} exact>\n        <Error />\n      </Route>\n\n      <Route path={`${PUBLIC_URL}/:userId/:albumId`} component={Page} exact/>\n      \n      <Route path={`${PUBLIC_URL}/:userId`} component={Page} exact/>\n\n      <Route path={`${PUBLIC_URL}/`} component={Page} exact/>\n\n      <Redirect path='*' to={`${PUBLIC_URL}/error`} />\n    </Switch>\n  </Router>\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './js/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}