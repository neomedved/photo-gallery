{"version":3,"sources":["js/constants/config.js","js/components/Header.js","js/components/Card.js","js/components/Container.js","js/components/Popup.js","js/components/Page.js","js/api/Api.js","js/components/Error.js","js/App.js","index.js"],"names":["PUBLIC_URL","process","withRouter","props","user","userId","album","albumId","className","to","Fragment","card","image","caption","id","url","src","alt","title","subtitle","data","map","element","key","prevId","nextId","api","baseUrl","this","fetch","method","then","res","ok","json","Promise","reject","Error","template","state","isLoaded","error","header","match","params","photoId","promises","push","Page","renderHeader","renderPhotos","renderAlbums","renderUsers","all","result","catch","finally","setState","updateState","prevProps","prevUserId","prevAlbumId","prevPhotoId","popup","getAlbum","getUser","name","getUsers","username","getAlbums","albums","a","getPhotos","photos","length","thumbnailUrl","index","toString","React","Component","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c29c1e0.chunk.js","sourcesContent":["const { NODE_ENV } = process.env;\nexport const API_URL = 'https://jsonplaceholder.typicode.com', PUBLIC_URL = NODE_ENV === 'production' ? process.env.PUBLIC_URL : '';\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { PUBLIC_URL } from '../constants/config';\n\nexport default withRouter(\n  function Header(props) {\n    const { user, userId, album, albumId } = props;\n    return <header className='header'>\n      <Link to={`${PUBLIC_URL}/`} className='header__link'>Галерея</Link>\n\n      {\n        userId ?\n          <React.Fragment>\n            <span className='header__slash'> / </span>\n            <Link to={`${PUBLIC_URL}/${userId}`} className='header__link'>{`${user}`}</Link>\n          </React.Fragment> :\n          null\n      }\n\n      {\n        albumId ?\n          <React.Fragment>\n            <span className='header__slash'> / </span>\n            <Link to={`${PUBLIC_URL}/${userId}/${albumId}`} className='header__link'>{`${album}`}</Link>\n          </React.Fragment> :\n          null\n      }\n    </header>;\n  }\n);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nexport default withRouter(\n  function Card(props){\n    const { image, caption, id } = props.card;\n    return <Link to={`${props.url}${id}`} className='cards__card'>\n      {image ? <img src={image.src} alt={image.alt} className='cards__image'/> : null}\n      {\n        caption ?\n          <React.Fragment>\n            <h3 className='cards__title'>{caption.title}</h3>\n            <h4 className='cards__subtitle'>{caption.subtitle}</h4>\n          </React.Fragment> :\n          null\n      }\n    </Link>\n  }\n);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Card from './Card';\n\nexport default withRouter(\n  function Container (props) {\n    const { url } = props\n    return <main className='cards'>\n      {\n        props.data.map((element) => {\n          return <Card key={`${url}${element.id}`} card={element} url={url} />;\n        })\n      }\n    </main>;\n}\n);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nexport default withRouter(\n  function Popup(props) {\n    const { src, alt, prevId, nextId, url } = props;\n    return <div className='popup'>\n      <div className='popup__content'>\n        <Link to={url} className='popup__close' />\n        {prevId ? <Link to={`${url}${prevId}`} className='popup__switch popup__switch_left'>{'<='}</Link> : null}\n        {nextId ? <Link to={`${url}${nextId}`} className='popup__switch popup__switch_right'>{'=>'}</Link> : null}\n        <img className='popup__image' src={src} alt={alt} />\n      </div>\n    </div>;\n  }\n);\n","import React from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport Header from './Header';\nimport Container from './Container';\nimport Popup from './Popup';\nimport Api from '../api/Api';\nimport { API_URL, PUBLIC_URL } from '../constants/config';\n\nconst api = new Api(API_URL);\n\nexport default withRouter(\n  class Page extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        isLoaded: false,\n        error: null,\n        header: {},\n        data: [],\n      }\n    }\n\n\n    static async renderHeader (userId, albumId) {\n      const album = albumId ? (await api.getAlbum(albumId)).title : null;\n      const user = userId ? (await api.getUser(userId)).name : null;\n      return {\n        user,\n        album,\n      }\n    }\n    \n\n    static async renderUsers() {\n      const data = await api.getUsers();\n      return {\n        data: data.map((element) => {\n          return {\n            id: element.id,\n            caption: {\n              title: element.name,\n              subtitle: `@${element.username}`,\n            },\n          };\n        }),\n      };   \n    }\n\n\n    static async renderAlbums(userId){\n      const albums = await api.getAlbums(userId);\n      return {\n        data: await Promise.all(albums.map(async (element) => {\n          const photos = await api.getPhotos(element.id);\n          return {\n            id: element.id,\n            caption: {\n              title: element.title,\n              subtitle: `Фотографий: ${photos.length}`,\n            },\n            image: {\n              src: photos[0].thumbnailUrl,\n              alt: element.title,\n            }\n          }\n        })),\n      };\n    }\n\n\n    static async renderPhotos(albumId, photoId) {\n      const data = await api.getPhotos(albumId);\n      let popup = null;\n      const result = data.map((element, index) => {\n        if (photoId === element.id.toString()) {\n          popup = {\n            src: element.url,\n            alt: element.title,\n            prevId: index > 0 ? data[index - 1].id : null,\n            nextId: index < data.length - 1 ? data[index + 1].id : null,\n          };\n        }\n        return {\n          id: element.id,\n          image: {\n            src: element.thumbnailUrl,\n            alt: `${element.title}`,\n          },\n        };\n      });\n      if (photoId && !popup) {\n        throw new Error('Invalid Request');\n      }\n      return {\n        data: result,\n        popup,\n      }\n    }\n\n\n    updateState() {\n      const { userId, albumId, photoId } = this.props.match.params;\n      let state;\n      const promises = [];\n\n      promises.push(Page.renderHeader(userId, albumId));\n\n      if(albumId) {\n        promises.push(Page.renderPhotos(albumId, photoId));\n      } else if (userId) {\n        promises.push(Page.renderAlbums(userId));\n      } else {\n        promises.push(Page.renderUsers());\n      }\n\n      Promise.all(promises)\n        .then((result) => {\n          state = {\n            header: {\n              ...result[0],\n              userId,\n              albumId,\n            },\n            ...result[1],\n            isLoaded: true,\n          };\n        })\n        .catch((error) =>  state = { error })\n        .finally(() => this.setState(state));\n    }\n\n\n    componentDidMount() {\n      this.updateState();\n    }\n\n    componentDidUpdate(prevProps) {\n      const { userId: prevUserId, albumId: prevAlbumId, photoId: prevPhotoId} = prevProps.match.params;\n      const { userId, albumId, photoId } = this.props.match.params;\n      if(userId !== prevUserId || albumId !== prevAlbumId || photoId !== prevPhotoId) {\n        this.updateState();\n      }\n    }\n\n\n    render() {\n      if (this.state.error) {\n        return <Redirect to={`${PUBLIC_URL}/error`} />\n      } else if (this.state.isLoaded) {\n        const { userId, albumId } = this.state.header;\n        const url = '/' + (userId ? `${userId}/` : '') + (albumId ? `${albumId}/` : '');\n        return <React.Fragment>\n          <Header {...this.state.header}/>\n          <Container data={this.state.data} url={url} />\n          {this.state.popup ? <Popup {...this.state.popup} url={url} /> : null}\n        </React.Fragment>;\n      } else {\n        return null;\n      }\n    }\n  }\n);\n","export default class Api {\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async template(url) {\n    return fetch(`${this.baseUrl}/${url}`, { method: 'GET' })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n        return Promise.reject(new Error('Loading Error'));\n      });\n  }\n\n  async getUsers() {\n    return this.template('users');\n  }\n\n  async getUser(userId) {\n    return this.template(`users/${userId}`);\n  }\n\n  async getAlbums(userId) {\n    return this.template(`users/${userId}/albums`);\n  }\n\n  async getAlbum(albumId) {\n    return this.template(`albums/${albumId}`);\n  }\n\n  async getPhotos(albumId) {\n    return this.template(`albums/${albumId}/photos`);\n  }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PUBLIC_URL } from '../constants/config';\n\nexport default function () {\n  return  <main className='error'>\n    <h1 className='error__title'>Ошибка</h1>\n    <h2 className='error__subtitle'>Не удалось получить данные :(</h2>\n      <Link to={`${PUBLIC_URL}/`} className='error__link'>Вернуться на главную</Link>\n  </main>;\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Page from './components/Page';\nimport Error from './components/Error';\nimport { PUBLIC_URL } from './constants/config';\n\nexport default function App(props) {\n  return <Router>\n    <Switch>\n      <Route path={`${PUBLIC_URL}/error`} exact>\n        <Error />\n      </Route>\n\n      <Route path={`${PUBLIC_URL}/:userId/:albumId/:photoId`} component={Page} exact />\n\n      <Route path={`${PUBLIC_URL}/:userId/:albumId`} component={Page} exact />\n      \n      <Route path={`${PUBLIC_URL}/:userId`} component={Page} exact />\n\n      <Route path={`${PUBLIC_URL}/`} component={Page} exact />\n\n      <Redirect path='*' to={`${PUBLIC_URL}/error`} />\n    </Switch>\n  </Router>\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './js/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}